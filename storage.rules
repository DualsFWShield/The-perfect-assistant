rules_version = '2';
service firebase.storage {
  match /b/{bucket}/o {
    // Fonction pour vérifier si l'utilisateur est autorisé
    function isAuthorizedUser() {
      return request.auth != null && 
             request.auth.token.email == firestore.get(/databases/$(database)/documents/config/allowed_user).data.email;
    }

    // Dossier utilisateur
    match /users/{userId}/{allPaths=**} {
      allow read, write: if request.auth != null && request.auth.uid == userId;
    }

    // Dossier temporaire pour les uploads
    match /temp/{userId}/{fileName} {
      allow write: if request.auth != null && 
                    request.auth.uid == userId && 
                    request.resource.size < 5 * 1024 * 1024 && // 5MB max
                    request.resource.contentType.matches('image/.*|audio/.*'); // Images et audio uniquement
      allow read: if request.auth != null && request.auth.uid == userId;
    }

    // Dossier des pièces jointes des emails
    match /email-attachments/{userId}/{fileName} {
      allow read: if request.auth != null && request.auth.uid == userId;
      allow write: if false; // En lecture seule, écrit uniquement par les fonctions Cloud
    }

    // Dossier des fichiers système
    match /system/{fileName} {
      allow read: if isAuthorizedUser();
      allow write: if false; // En lecture seule
    }

    // Bloquer tout autre accès
    match /{allPaths=**} {
      allow read, write: if false;
    }
  }
}